var documenterSearchIndex = {"docs":
[{"location":"#Econometrics-1","page":"Econometrics","title":"Econometrics","text":"","category":"section"},{"location":"#Setup-1","page":"Econometrics","title":"Setup","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"using Econometrics, CSV, RDatasets","category":"page"},{"location":"#Continuous-Response-Models-1","page":"Econometrics","title":"Continuous Response Models","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"data = RDatasets.dataset(\"Ecdat\", \"Crime\") |>\n  (data -> select(data, [:County, :Year, :CRMRTE, :PrbConv, :AvgSen, :PrbPris]))\nfirst(data, 6)","category":"page"},{"location":"#Pooling-1","page":"Econometrics","title":"Pooling","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(CRMRTE ~ PrbConv + AvgSen + PrbPris),\n            data)","category":"page"},{"location":"#Between-1","page":"Econometrics","title":"Between","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(CRMRTE ~ PrbConv + AvgSen + PrbPris + between(County)),\n            data)","category":"page"},{"location":"#Within-1","page":"Econometrics","title":"Within","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(CRMRTE ~ PrbConv + AvgSen + PrbPris + absorb(County)),\n            data)","category":"page"},{"location":"#Within-(two-ways)-1","page":"Econometrics","title":"Within (two-ways)","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n                 @formula(CRMRTE ~ PrbConv + AvgSen + PrbPris + absorb(County + Year)),\n                 data)","category":"page"},{"location":"#Random-1","page":"Econometrics","title":"Random","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(CRMRTE ~ PrbConv + AvgSen + PrbPris + PID(County) + TID(Year)),\n            data)","category":"page"},{"location":"#Random-with-Instrumental-Variables-1","page":"Econometrics","title":"Random with Instrumental Variables","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(CRMRTE ~ PrbConv + (AvgSen ~ PrbPris) + PID(County) + TID(Year)),\n            data)","category":"page"},{"location":"#Nominal-Response-Model-1","page":"Econometrics","title":"Nominal Response Model","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"data = joinpath(dirname(pathof(Econometrics)), \"..\", \"data\", \"insure.csv\") |>\n   CSV.read |>\n   (data -> select(data, [:insure, :age, :male, :nonwhite, :site])) |>\n   dropmissing |>\n   (data -> categorical!(data, [:insure, :site]))\nfirst(data, 6)","category":"page"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(insure ~ 1 + age + male + nonwhite + site),\n            data,\n            contrasts = Dict(:insure => DummyCoding(base = \"Uninsure\"))\n            )","category":"page"},{"location":"#Ordinal-Response-Model-1","page":"Econometrics","title":"Ordinal Response Model","text":"","category":"section"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"data = RDatasets.dataset(\"Ecdat\", \"Kakadu\") |>\n       (data -> select(data, [:RecParks, :Sex, :Age, :Schooling]))\ndata.RecParks = convert(Vector{Int}, data.RecParks)\ndata.RecParks = levels!(categorical(data.RecParks, ordered = true), collect(1:5))\nfirst(data, 6)","category":"page"},{"location":"#","page":"Econometrics","title":"Econometrics","text":"model = fit(EconometricModel,\n            @formula(RecParks ~ Age + Sex + Schooling),\n            data,\n            contrasts = Dict(:RecParks => DummyCoding(levels = collect(1:5)))\n            )","category":"page"}]
}
